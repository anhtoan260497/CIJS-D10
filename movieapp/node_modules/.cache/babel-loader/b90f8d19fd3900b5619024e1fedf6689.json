{"ast":null,"code":"var _jsxFileName = \"/Users/anhtoan/Desktop/CIJS-D10/movieapp/src/Components/Homepage/MovieRender/index.jsx\";\nimport React, { Component } from \"react\";\nimport \"./MovieRender.scss\";\nimport MovieTag from \"./MovieTag\";\nimport Data from \"../../../Data/Data\";\nimport TrailerHover from \"./MovieTag/TrailerHover\";\nimport { Fragment } from \"react/cjs/react.production.min\";\nimport SearchBar from \"../SearchBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MovieRender extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onClickButton = async e => {\n      if (e.target.name === \"isPopularMovies\") {\n        let dataPopular = [];\n        let resPopular = await Data.getPopularMovies(1);\n\n        for (let i = 0; i < 20; i++) {\n          dataPopular.push(resPopular.data.results[i]);\n        } // Lấy 20 phim\n\n\n        this.setState({\n          isPopularMovies: true,\n          isTopRatedMovies: false,\n          isUpComingMovies: false,\n          onTrailer: false,\n          data: dataPopular,\n          page: 1,\n          search: \"\",\n          isSearch: false\n        });\n      } else if (e.target.name === \"isTopRatedMovies\") {\n        let dataTopRated = [];\n        let resTopRated = await Data.getTopRatedMovies(1);\n\n        for (let i = 0; i < 20; i++) {\n          dataTopRated.push(resTopRated.data.results[i]);\n        }\n\n        this.setState({\n          isPopularMovies: false,\n          isTopRatedMovies: true,\n          isUpComingMovies: false,\n          onTrailer: false,\n          data: dataTopRated,\n          page: 1,\n          search: \"\",\n          isSearch: false\n        });\n      } else {\n        let dataUpComing = [];\n        let resUpComing = await Data.getUpComingMovies(1);\n\n        for (let i = 0; i < 20; i++) {\n          dataUpComing.push(resUpComing.data.results[i]);\n        }\n\n        this.setState({\n          isPopularMovies: false,\n          isTopRatedMovies: false,\n          isUpComingMovies: true,\n          data: dataUpComing,\n          onTrailer: false,\n          page: 1,\n          search: \"\",\n          isSearch: false\n        });\n      }\n    };\n\n    this.onGetId = async id => {\n      let key = \"\";\n      let resVideo = await Data.getVideos(id);\n      this.setState({\n        trailer: resVideo.data.results\n      }, () => {\n        let arr = this.state.trailer.filter(el => {\n          return el.name.includes(\"Official\") || el.name.includes(\"Trailer\");\n        });\n\n        if (arr.length !== 0) {\n          key = arr[0].key;\n          this.setState({\n            key: key,\n            onTrailer: true\n          });\n        }\n      }); // Lấy key của video\n    };\n\n    this.renderMovieTag = () => {\n      return this.state.data.map(el => {\n        return /*#__PURE__*/_jsxDEV(MovieTag, {\n          history: this.props.history,\n          popularMovies: el,\n          onGetId: this.onGetId\n        }, el.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }, this);\n      });\n    };\n\n    this.turnOffTrailer = () => {\n      this.setState({\n        onTrailer: false\n      });\n    };\n\n    this.onSearch = e => {\n      this.setState({\n        search: e.target.value,\n        isPopularMovies: false,\n        isTopRatedMovies: false,\n        isUpComingMovies: false,\n        isSearch: true\n      }, // Nhập ký tự vào thì cho isSearch bằng True\n      async () => {\n        // Lấy Data\n        if (this.state.search.length === 0) {\n          //Nếu không có gì trong thanh search thì render lại phần Popular\n          let dataPopular = [];\n          let resPopular = await Data.getPopularMovies(this.state.page);\n\n          for (let i = 0; i < 20; i++) {\n            // Lấy 18 phim để responsive giao diện\n            dataPopular.push(resPopular.data.results[i]);\n          }\n\n          this.setState({\n            data: dataPopular,\n            isSearch: false\n          });\n        } else {\n          // Nếu có thì Render phần Search\n          let resSearch = await Data.getSearch(this.state.search);\n          this.setState({\n            data: resSearch.data.results\n          });\n        }\n      });\n    };\n\n    this.loadMore = async () => {\n      if (this.state.isPopularMovies) {\n        //Trường hợp lấy Popular Movie\n        let newMovies = [...this.state.data]; //Clone lại data bên trên\n\n        this.setState({\n          isLoading: true\n        }); // Cho gif loading\n\n        let resPopular = await Data.getPopularMovies(this.state.page + 1); // Lấy Data Page 2\n\n        for (let i = 0; i < 18; i++) {\n          newMovies.push(resPopular.data.results[i]); // tạo lại mảng data mới\n        }\n\n        this.setState({\n          isLoading: false,\n          data: newMovies,\n          page: this.state.page + 1\n        }); // tắt loading, set lại data để render và chỉnh số page đang lấy +1\n      } else if (this.state.isTopRatedMovies) {\n        //Trường hợp Top Rated\n        //Trường hợp lấy Popular Movie\n        let newMovies = [...this.state.data];\n        this.setState({\n          isLoading: true\n        });\n        let resTopRated = await Data.getTopRatedMovies(this.state.page + 1); //\n\n        for (let i = 0; i < 18; i++) {\n          newMovies.push(resTopRated.data.results[i]);\n        }\n\n        this.setState({\n          isLoading: false,\n          data: newMovies,\n          page: this.state.page + 1\n        });\n      } else if (this.state.isUpComingMovies) {\n        //Trường hợp lấy Upcoming Movie\n        let newMovies = [...this.state.data];\n        this.setState({\n          isLoading: true\n        });\n        let resUpComing = await Data.getUpComingMovies(this.state.page + 1);\n\n        for (let i = 0; i < 18; i++) {\n          newMovies.push(resUpComing.data.results[i]);\n        }\n\n        this.setState({\n          isLoading: false,\n          data: newMovies,\n          page: this.state.page + 1\n        });\n      }\n    };\n\n    this.state = {\n      page: 1,\n      data: [],\n      isPopularMovies: true,\n      isTopRatedMovies: false,\n      isUpComingMovies: false,\n      isSearch: false,\n      // lấy giá trị từ components Container - Home\n      trailer: [],\n      key: \"\",\n      onTrailer: false,\n      search: \"\",\n      isLoading: false\n    };\n  } // Mặc định lúc Mount đầu tiên sẽ luôn là Popular\n\n\n  async componentDidMount() {\n    let dataPopular = [];\n    let resPopular = await Data.getPopularMovies(this.state.page);\n\n    for (let i = 0; i < 20; i++) {\n      dataPopular.push(resPopular.data.results[i]);\n    }\n\n    this.setState({\n      data: dataPopular\n    });\n  } // Tạo nút Popular, Upcoming và Top Rated, ấn vào cái nào, lấy Data cái đó set lại state\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        onSearch: this.onSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"popular button\",\n          onClick: e => this.onClickButton(e),\n          name: \"isPopularMovies\",\n          children: \"Popular\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"top-rated button\",\n          onClick: e => this.onClickButton(e),\n          name: \"isTopRatedMovies\",\n          children: \"Top Rated\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"up-coming button\",\n          onClick: e => this.onClickButton(e),\n          name: \"isUpComingMovies\",\n          children: \"Up Coming\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-render-container\",\n        onClick: this.turnOffTrailer,\n        children: [this.state.onTrailer ? /*#__PURE__*/_jsxDEV(TrailerHover, {\n          id: this.state.key\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 35\n        }, this) : null, this.renderMovieTag()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), this.state.isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: process.env.PUBLIC_URL + \"/Images/loading.gif\",\n          alt: \"non\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"load-more-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"load-more\",\n          onClick: this.loadMore,\n          children: \"Load More\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default MovieRender;","map":{"version":3,"sources":["/Users/anhtoan/Desktop/CIJS-D10/movieapp/src/Components/Homepage/MovieRender/index.jsx"],"names":["React","Component","MovieTag","Data","TrailerHover","Fragment","SearchBar","MovieRender","constructor","props","onClickButton","e","target","name","dataPopular","resPopular","getPopularMovies","i","push","data","results","setState","isPopularMovies","isTopRatedMovies","isUpComingMovies","onTrailer","page","search","isSearch","dataTopRated","resTopRated","getTopRatedMovies","dataUpComing","resUpComing","getUpComingMovies","onGetId","id","key","resVideo","getVideos","trailer","arr","state","filter","el","includes","length","renderMovieTag","map","history","turnOffTrailer","onSearch","value","resSearch","getSearch","loadMore","newMovies","isLoading","componentDidMount","render","process","env","PUBLIC_URL"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./MovieRender.scss\";\nimport MovieTag from \"./MovieTag\";\nimport Data from \"../../../Data/Data\";\nimport TrailerHover from \"./MovieTag/TrailerHover\";\nimport { Fragment } from \"react/cjs/react.production.min\";\nimport SearchBar from \"../SearchBar\";\n\nclass MovieRender extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: 1,\n      data: [],\n\n      isPopularMovies: true,\n      isTopRatedMovies: false,\n      isUpComingMovies: false,\n      isSearch: false, // lấy giá trị từ components Container - Home\n\n      trailer: [],\n      key: \"\",\n      onTrailer: false,\n      search: \"\",\n      isLoading: false,\n    };\n  }\n\n  // Mặc định lúc Mount đầu tiên sẽ luôn là Popular\n  async componentDidMount() {\n    let dataPopular = [];\n    let resPopular = await Data.getPopularMovies(this.state.page);\n    for (let i = 0; i <20; i++) {\n      dataPopular.push(resPopular.data.results[i]);\n    }\n    this.setState({ data: dataPopular });\n  }\n\n  // Tạo nút Popular, Upcoming và Top Rated, ấn vào cái nào, lấy Data cái đó set lại state\n  onClickButton = async (e) => {\n    if (e.target.name === \"isPopularMovies\") {\n      let dataPopular = [];\n      let resPopular = await Data.getPopularMovies(1);\n      for (let i = 0; i < 20; i++) {\n        dataPopular.push(resPopular.data.results[i]);\n      } // Lấy 20 phim\n      this.setState({\n        isPopularMovies: true,\n        isTopRatedMovies: false,\n        isUpComingMovies: false,\n        onTrailer: false,\n        data: dataPopular,\n        page:1,\n        search:\"\",\n        isSearch:false\n      });\n    } else if (e.target.name === \"isTopRatedMovies\") {\n      let dataTopRated = [];\n      let resTopRated = await Data.getTopRatedMovies(1);\n      for (let i = 0; i < 20; i++) {\n        dataTopRated.push(resTopRated.data.results[i]);\n      }\n      this.setState({\n        isPopularMovies: false,\n        isTopRatedMovies: true,\n        isUpComingMovies: false,\n        onTrailer: false,\n        data: dataTopRated,\n        page:1,\n        search:\"\",\n        isSearch:false\n      });\n    } else {\n      let dataUpComing = [];\n      let resUpComing = await Data.getUpComingMovies(1);\n      for (let i = 0; i < 20; i++) {\n        dataUpComing.push(resUpComing.data.results[i]);\n      }\n      this.setState({\n        isPopularMovies: false,\n        isTopRatedMovies: false,\n        isUpComingMovies: true,\n        data: dataUpComing,\n        onTrailer: false,\n        page:1,\n        search:\"\",\n        isSearch:false\n      });\n    }\n  };\n\n  //Lấy ID để lấy trailer\n  onGetId = async (id) => {\n    let key = \"\";\n    let resVideo = await Data.getVideos(id);\n    this.setState({ trailer: resVideo.data.results }, () => {\n      let arr = this.state.trailer.filter((el) => {\n        return el.name.includes(\"Official\") || el.name.includes(\"Trailer\");\n      });\n      if (arr.length !== 0) {\n        key = arr[0].key;\n        this.setState({ key: key, onTrailer: true });\n      }\n    }); // Lấy key của video\n  };\n\n  //Render Movies\n  renderMovieTag = () => {\n    return this.state.data.map((el) => {\n      return (\n        <MovieTag\n          history={this.props.history}\n          popularMovies={el}\n          key={el.id}\n          onGetId={this.onGetId}\n        />\n      );\n    });\n  };\n\n  //Tắt trailer\n  turnOffTrailer = () => {\n    this.setState({ onTrailer: false });\n  };\n\n  onSearch = (e) => {\n    this.setState(\n      {\n        search: e.target.value,\n        isPopularMovies: false,\n        isTopRatedMovies: false,\n        isUpComingMovies: false,\n        isSearch: true,\n      }, // Nhập ký tự vào thì cho isSearch bằng True\n      async () => {\n        // Lấy Data\n        if (this.state.search.length === 0) {\n          //Nếu không có gì trong thanh search thì render lại phần Popular\n          let dataPopular = [];\n          let resPopular = await Data.getPopularMovies(this.state.page);\n          for (let i = 0; i <20; i++) {\n            // Lấy 18 phim để responsive giao diện\n            dataPopular.push(resPopular.data.results[i]);\n          }\n          this.setState({ data: dataPopular, isSearch: false });\n        } else {\n          // Nếu có thì Render phần Search\n          let resSearch = await Data.getSearch(this.state.search);\n          this.setState({ data: resSearch.data.results });\n        }\n      }\n    );\n  };\n\n  loadMore = async () => {\n    if (this.state.isPopularMovies) {\n      //Trường hợp lấy Popular Movie\n      let newMovies = [...this.state.data]; //Clone lại data bên trên\n      this.setState({ isLoading: true }); // Cho gif loading\n      let resPopular = await Data.getPopularMovies(this.state.page + 1); // Lấy Data Page 2\n      for (let i = 0; i < 18; i++) {\n        newMovies.push(resPopular.data.results[i]); // tạo lại mảng data mới\n      }\n      this.setState({\n        isLoading: false,\n        data: newMovies,\n        page: this.state.page + 1,\n      }); // tắt loading, set lại data để render và chỉnh số page đang lấy +1\n    } else if (this.state.isTopRatedMovies) {\n      //Trường hợp Top Rated\n      //Trường hợp lấy Popular Movie\n      let newMovies = [...this.state.data];\n      this.setState({ isLoading: true });\n      let resTopRated = await Data.getTopRatedMovies(this.state.page + 1); //\n      for (let i = 0; i < 18; i++) {\n        newMovies.push(resTopRated.data.results[i]);\n      }\n      this.setState({\n        isLoading: false,\n        data: newMovies,\n        page: this.state.page + 1,\n      });\n    } else if (this.state.isUpComingMovies) {\n      //Trường hợp lấy Upcoming Movie\n      let newMovies = [...this.state.data];\n      this.setState({ isLoading: true });\n      let resUpComing = await Data.getUpComingMovies(this.state.page + 1);\n      for (let i = 0; i < 18; i++) {\n        newMovies.push(resUpComing.data.results[i]);\n      }\n      this.setState({\n        isLoading: false,\n        data: newMovies,\n        page: this.state.page + 1,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <SearchBar onSearch={this.onSearch} />\n        <div className=\"buttons\">\n          <button\n            className=\"popular button\"\n            onClick={(e) => this.onClickButton(e)}\n            name=\"isPopularMovies\"\n          >\n            Popular\n          </button>\n          <button\n            className=\"top-rated button\"\n            onClick={(e) => this.onClickButton(e)}\n            name=\"isTopRatedMovies\"\n          >\n            Top Rated\n          </button>\n          <button\n            className=\"up-coming button\"\n            onClick={(e) => this.onClickButton(e)}\n            name=\"isUpComingMovies\"\n          >\n            Up Coming\n          </button>\n        </div>\n        <div className=\"movie-render-container\" onClick={this.turnOffTrailer}>\n          {this.state.onTrailer ? <TrailerHover id={this.state.key} /> : null}\n          {this.renderMovieTag()}\n        </div>\n        {this.state.isLoading ? (\n          <div className=\"loading\">\n            <img\n              src={process.env.PUBLIC_URL + \"/Images/loading.gif\"}\n              alt=\"non\"\n            />{\" \"}\n          </div>\n        ) : (\n          <div className=\"load-more-container\">\n            <button className=\"load-more\" onClick={this.loadMore}>\n              Load More\n            </button>\n          </div>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nexport default MovieRender;\n"]},"metadata":{},"sourceType":"module"}