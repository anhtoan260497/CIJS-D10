{"ast":null,"code":"var _jsxFileName = \"/Users/anhtoan/Desktop/CIJS-D10/movieapp/src/Components/FilmInfoPage/ActorRender/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Data from '../../../Data/Data';\nimport './ActorRender.scss';\nimport ActorTag from './ActorTag';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ActorRender(props) {\n  _s();\n\n  const [actors, setActors] = useState([]);\n\n  const upDateActors = async id => {\n    let resActors = await Data.getActors(id);\n    setActors(resActors.data.cast);\n  };\n\n  upDateActors(props.id);\n\n  const renderActor = () => {\n    let actor = [];\n\n    for (let i = 0; i < 24; i++) {\n      actor.push(actors[i]);\n    }\n\n    return actors.map(el => {\n      return /*#__PURE__*/_jsxDEV(ActorTag, {\n        actorInfo: el\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 20\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"actor-container\",\n    children: renderActor()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ActorRender, \"C9dmpGY3xLbHmJm5ePLwAPYm71s=\");\n\n_c = ActorRender;\nexport default ActorRender;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActorRender\");","map":{"version":3,"sources":["/Users/anhtoan/Desktop/CIJS-D10/movieapp/src/Components/FilmInfoPage/ActorRender/index.jsx"],"names":["React","useState","Data","ActorTag","ActorRender","props","actors","setActors","upDateActors","id","resActors","getActors","data","cast","renderActor","actor","i","push","map","el"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAO,oBAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACxB,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAqBN,QAAQ,CAAC,EAAD,CAAnC;;AAEA,QAAMO,YAAY,GAAG,MAAMC,EAAN,IAAY;AAC7B,QAAIC,SAAS,GAAG,MAAMR,IAAI,CAACS,SAAL,CAAeF,EAAf,CAAtB;AACAF,IAAAA,SAAS,CAACG,SAAS,CAACE,IAAV,CAAeC,IAAhB,CAAT;AACH,GAHD;;AAIAL,EAAAA,YAAY,CAACH,KAAK,CAACI,EAAP,CAAZ;;AAEA,QAAMK,WAAW,GAAG,MAAK;AACrB,QAAIC,KAAK,GAAG,EAAZ;;AACA,SAAI,IAAIC,CAAC,GAAE,CAAX,EAAeA,CAAC,GAAG,EAAnB,EAAuBA,CAAC,EAAxB,EAA4B;AACxBD,MAAAA,KAAK,CAACE,IAAN,CAAWX,MAAM,CAACU,CAAD,CAAjB;AACH;;AACF,WAAQV,MAAM,CAACY,GAAP,CAAWC,EAAE,IAAI;AACpB,0BAAO,QAAC,QAAD;AAAU,QAAA,SAAS,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFM,CAAR;AAGF,GARD;;AAUA,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,cACIL,WAAW;AADf;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAxBQV,W;;KAAAA,W;AA0BT,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport Data from '../../../Data/Data';\nimport './ActorRender.scss'\nimport ActorTag from './ActorTag';\n\nfunction ActorRender(props) {\n    const [actors,setActors] = useState([])\n\n    const upDateActors = async id => {\n        let resActors = await Data.getActors(id)\n        setActors(resActors.data.cast)\n    }\n    upDateActors(props.id)\n\n    const renderActor = () =>{\n        let actor = []\n        for(let i =0 ; i < 24 ;i++) {\n            actor.push(actors[i])\n        }\n       return  actors.map(el => {\n            return <ActorTag actorInfo={el} /> \n        })\n    }\n\n    return (\n        <div className=\"actor-container\">\n           {renderActor()}\n        </div>\n    );\n}\n\nexport default ActorRender;"]},"metadata":{},"sourceType":"module"}