{"ast":null,"code":"var _jsxFileName = \"/Users/anhtoan/Desktop/CIJS-D10/movieapp/src/Components/FilmInfoPage/ActorRender/index.jsx\";\nimport React, { Component } from \"react\";\nimport Data from \"../../../Data/Data\";\nimport \"./ActorRender.scss\";\nimport ActorTag from \"./ActorTag\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ActorRender extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      let resActors = await Data.getActors(this.props.id);\n      console.log(resActors);\n      let newActors = [];\n\n      if (resActors.data.cast.length >= 24) {\n        for (let i = 0; i < 24; i++) {\n          newActors.push(resActors.data.cast[i]);\n        }\n\n        this.setState({\n          actors: newActors\n        });\n      } else {\n        this.setState({\n          actors: resActors.data.cast\n        });\n      }\n    };\n\n    this.renderActors = () => {\n      return this.state.actors.map((el, idx) => {\n        return /*#__PURE__*/_jsxDEV(ActorTag, {\n          actorInfo: el\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 14\n        }, this);\n      });\n    };\n\n    this.state = {\n      actors: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actor-container\",\n      children: this.renderActors()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default ActorRender;","map":{"version":3,"sources":["/Users/anhtoan/Desktop/CIJS-D10/movieapp/src/Components/FilmInfoPage/ActorRender/index.jsx"],"names":["React","Component","Data","ActorTag","ActorRender","constructor","props","componentDidMount","resActors","getActors","id","console","log","newActors","data","cast","length","i","push","setState","actors","renderActors","state","map","el","idx","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAO,oBAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAClCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAOnBC,iBAPmB,GAOC,YAAY;AAC9B,UAAIC,SAAS,GAAG,MAAMN,IAAI,CAACO,SAAL,CAAe,KAAKH,KAAL,CAAWI,EAA1B,CAAtB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ;AACA,UAAIK,SAAS,GAAG,EAAhB;;AACA,UAAIL,SAAS,CAACM,IAAV,CAAeC,IAAf,CAAoBC,MAApB,IAA8B,EAAlC,EAAsC;AACpC,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BJ,UAAAA,SAAS,CAACK,IAAV,CAAeV,SAAS,CAACM,IAAV,CAAeC,IAAf,CAAoBE,CAApB,CAAf;AACD;;AACD,aAAKE,QAAL,CAAc;AAAEC,UAAAA,MAAM,EAAEP;AAAV,SAAd;AACD,OALD,MAKO;AAAC,aAAKM,QAAL,CAAc;AAACC,UAAAA,MAAM,EAACZ,SAAS,CAACM,IAAV,CAAeC;AAAvB,SAAd;AAA4C;AACrD,KAjBkB;;AAAA,SAmBnBM,YAnBmB,GAmBJ,MAAM;AACnB,aAAO,KAAKC,KAAL,CAAWF,MAAX,CAAkBG,GAAlB,CAAsB,CAACC,EAAD,EAAKC,GAAL,KAAa;AACxC,4BAAO,QAAC,QAAD;AAAU,UAAA,SAAS,EAAED;AAArB,WAA8BC,GAA9B;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFM,CAAP;AAGD,KAvBkB;;AAEjB,SAAKH,KAAL,GAAa;AACXF,MAAAA,MAAM,EAAE;AADG,KAAb;AAGD;;AAoBDM,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,gBAAkC,KAAKL,YAAL;AAAlC;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AA5BiC;;AA+BpC,eAAejB,WAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Data from \"../../../Data/Data\";\nimport \"./ActorRender.scss\";\nimport ActorTag from \"./ActorTag\";\n\nclass ActorRender extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      actors: [],\n    };\n  }\n\n  componentDidMount = async () => {\n    let resActors = await Data.getActors(this.props.id);\n    console.log(resActors)\n    let newActors = [];\n    if (resActors.data.cast.length >= 24) {\n      for (let i = 0; i < 24; i++) {\n        newActors.push(resActors.data.cast[i]);\n      }\n      this.setState({ actors: newActors });\n    } else {this.setState({actors:resActors.data.cast})}\n  };\n\n  renderActors = () => {\n    return this.state.actors.map((el, idx) => {\n      return <ActorTag actorInfo={el} key={idx} />;\n    });\n  };\n\n  render() {\n    return <div className=\"actor-container\">{this.renderActors()}</div>;\n  }\n}\n\nexport default ActorRender;\n"]},"metadata":{},"sourceType":"module"}