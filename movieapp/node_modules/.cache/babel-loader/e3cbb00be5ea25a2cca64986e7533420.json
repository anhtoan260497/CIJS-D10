{"ast":null,"code":"var _jsxFileName = \"/Users/anhtoan/Desktop/CIJS-D10/movieapp/src/Components/Homepage/MovieRender/index.jsx\";\nimport React, { Component } from \"react\";\nimport \"./MovieRender.scss\";\nimport MovieTag from \"./MovieTag\";\nimport Data from \"../../../Data/Data\";\nimport TrailerHover from \"./MovieTag/TrailerHover\";\nimport { Fragment } from \"react/cjs/react.production.min\";\nimport SearchBar from \"../SearchBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MovieRender extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onClickButton = async e => {\n      let {\n        page\n      } = this.state;\n\n      if (e.target.name === \"isPopularMovies\") {\n        let dataPopular = [];\n        let resPopular = await Data.getPopularMovies(page);\n\n        for (let i = 0; i < 12; i++) {\n          dataPopular.push(resPopular.data.results[i]);\n        } // Lấy 12 phim\n\n\n        this.setState({\n          isPopularMovies: true,\n          isTopRatedMovies: false,\n          isUpComingMovies: false,\n          onTrailer: false,\n          data: dataPopular\n        });\n      } else if (e.target.name === \"isTopRatedMovies\") {\n        let dataTopRated = [];\n        let resTopRated = await Data.getTopRatedMovies(page);\n\n        for (let i = 0; i < 12; i++) {\n          dataTopRated.push(resTopRated.data.results[i]);\n        }\n\n        this.setState({\n          isPopularMovies: false,\n          isTopRatedMovies: true,\n          isUpComingMovies: false,\n          onTrailer: false,\n          data: dataTopRated\n        });\n      } else {\n        let dataUpComing = [];\n        let resUpComing = await Data.getUpComingMovies(page);\n\n        for (let i = 0; i < 12; i++) {\n          dataUpComing.push(resUpComing.data.results[i]);\n        }\n\n        this.setState({\n          isPopularMovies: false,\n          isTopRatedMovies: false,\n          isUpComingMovies: true,\n          data: dataUpComing,\n          onTrailer: false\n        });\n      }\n    };\n\n    this.onGetId = async id => {\n      let key = \"\";\n      let resVideo = await Data.getVideos(id);\n      this.setState({\n        trailer: resVideo.data.results\n      }, () => {\n        let arr = this.state.trailer.filter(el => {\n          return el.name.includes(\"Official\") || el.name.includes(\"Trailer\");\n        });\n\n        if (arr.length !== 0) {\n          key = arr[0].key;\n          this.setState({\n            key: key,\n            onTrailer: true\n          });\n        }\n      }); // Lấy key của video\n    };\n\n    this.renderMovieTag = () => {\n      return this.state.data.map(el => {\n        return /*#__PURE__*/_jsxDEV(MovieTag, {\n          history: this.props.history,\n          popularMovies: el,\n          onGetId: this.onGetId\n        }, el.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }, this);\n      });\n    };\n\n    this.turnOffTrailer = () => {\n      this.setState({\n        onTrailer: false\n      });\n    };\n\n    this.onSearch = e => {\n      this.setState({\n        search: e.target.value,\n        isPopularMovies: false,\n        isTopRatedMovies: false,\n        isUpComingMovies: false,\n        isSearch: true\n      }, // Nhập ký tự vào thì cho isSearch bằng True\n      async () => {\n        // Lấy Data\n        if (this.state.search.length === 0) {\n          //Nếu không có gì trong thanh search thì render lại phần Popular\n          let dataPopular = [];\n          let resPopular = await Data.getPopularMovies(this.state.page);\n\n          for (let i = 0; i < 12; i++) {\n            // Lấy 12 phim để responsive giao diện\n            dataPopular.push(resPopular.data.results[i]);\n          }\n\n          this.setState({\n            data: dataPopular,\n            isSearch: false\n          });\n        } else {\n          // Nếu có thì Render phần Search\n          let resSearch = await Data.getSearch(this.state.search);\n          this.setState({\n            data: resSearch.data.results\n          });\n        }\n      });\n    };\n\n    this.loadMore = async () => {\n      if (this.state.isPopularMovies) {\n        //Trường hợp lấy Popular Movie\n        let newMovies = [...this.state.data]; //Clone lại data bên trên\n\n        this.setState({\n          isLoading: true\n        }); // Cho gif loading\n\n        let resPopular = await Data.getPopularMovies(this.state.page + 1); // Lấy Data Page 2\n\n        for (let i = 0; i < 12; i++) {\n          newMovies.push(resPopular.data.results[i]); // tạo lại mảng data mới\n        }\n\n        this.setState({\n          isLoading: false,\n          data: newMovies,\n          page: this.state.page + 1\n        }); // tắt loading, set lại data để render và chỉnh số page đang lấy +1\n      } else if (this.state.isTopRatedMovies) {\n        //Trường hợp lấy Popular Movie\n        let newMovies = [...this.state.data]; //Clone lại data bên trên\n\n        this.setState({\n          isLoading: true\n        }); // Cho gif loading\n\n        let resTopRated = await Data.getTopRatedMovies(this.state.page + 1); // Lấy Data Page 2\n\n        for (let i = 0; i < 12; i++) {\n          newMovies.push(resTopRated.data.results[i]); // tạo lại mảng data mới\n        }\n\n        this.setState({\n          isLoading: false,\n          data: newMovies,\n          page: this.state.page + 1\n        }); // tắt loading, set lại data để render và chỉnh số page đang lấy +1\n      } else {}\n    };\n\n    this.state = {\n      page: 1,\n      data: [],\n      isPopularMovies: true,\n      isTopRatedMovies: false,\n      isUpComingMovies: false,\n      isSearch: false,\n      // lấy giá trị từ components Container - Home\n      trailer: [],\n      key: \"\",\n      onTrailer: false,\n      search: \"\",\n      isLoading: false\n    };\n  } // Mặc định lúc Mount đầu tiên sẽ luôn là Popular\n\n\n  async componentDidMount() {\n    let dataPopular = [];\n    let resPopular = await Data.getPopularMovies(this.state.page);\n\n    for (let i = 0; i < 12; i++) {\n      dataPopular.push(resPopular.data.results[i]);\n    }\n\n    this.setState({\n      data: dataPopular\n    });\n  } // Tạo nút Popular, Upcoming và Top Rated, ấn vào cái nào, lấy Data cái đó set lại state\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        onSearch: this.onSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"popular button\",\n          onClick: e => this.onClickButton(e),\n          name: \"isPopularMovies\",\n          children: \"Popular\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"top-rated button\",\n          onClick: e => this.onClickButton(e),\n          name: \"isTopRatedMovies\",\n          children: \"Top Rated\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"up-coming button\",\n          onClick: e => this.onClickButton(e),\n          name: \"isUpComingMovies\",\n          children: \"Up Coming\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-render-container\",\n        onClick: this.turnOffTrailer,\n        children: [this.state.onTrailer ? /*#__PURE__*/_jsxDEV(TrailerHover, {\n          id: this.state.key\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 35\n        }, this) : null, this.renderMovieTag()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), this.state.isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: process.env.PUBLIC_URL + \"/Images/loading.gif\",\n          alt: \"non\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"load-more-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"load-more\",\n          onClick: this.loadMore,\n          children: \"Load More\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default MovieRender;","map":{"version":3,"sources":["/Users/anhtoan/Desktop/CIJS-D10/movieapp/src/Components/Homepage/MovieRender/index.jsx"],"names":["React","Component","MovieTag","Data","TrailerHover","Fragment","SearchBar","MovieRender","constructor","props","onClickButton","e","page","state","target","name","dataPopular","resPopular","getPopularMovies","i","push","data","results","setState","isPopularMovies","isTopRatedMovies","isUpComingMovies","onTrailer","dataTopRated","resTopRated","getTopRatedMovies","dataUpComing","resUpComing","getUpComingMovies","onGetId","id","key","resVideo","getVideos","trailer","arr","filter","el","includes","length","renderMovieTag","map","history","turnOffTrailer","onSearch","search","value","isSearch","resSearch","getSearch","loadMore","newMovies","isLoading","componentDidMount","render","process","env","PUBLIC_URL"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./MovieRender.scss\";\nimport MovieTag from \"./MovieTag\";\nimport Data from \"../../../Data/Data\";\nimport TrailerHover from \"./MovieTag/TrailerHover\";\nimport { Fragment } from \"react/cjs/react.production.min\";\nimport SearchBar from \"../SearchBar\";\n\nclass MovieRender extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: 1,\n      data: [],\n\n      isPopularMovies: true,\n      isTopRatedMovies: false,\n      isUpComingMovies: false,\n      isSearch: false, // lấy giá trị từ components Container - Home\n\n      trailer: [],\n      key: \"\",\n      onTrailer: false,\n      search: \"\",\n      isLoading: false,\n    };\n  }\n\n  // Mặc định lúc Mount đầu tiên sẽ luôn là Popular\n  async componentDidMount() {\n    let dataPopular = [];\n    let resPopular = await Data.getPopularMovies(this.state.page);\n    for (let i = 0; i < 12; i++) {\n      dataPopular.push(resPopular.data.results[i]);\n    }\n    this.setState({ data: dataPopular });\n  }\n\n  // Tạo nút Popular, Upcoming và Top Rated, ấn vào cái nào, lấy Data cái đó set lại state\n  onClickButton = async (e) => {\n    let { page } = this.state;\n\n    if (e.target.name === \"isPopularMovies\") {\n      let dataPopular = [];\n      let resPopular = await Data.getPopularMovies(page);\n      for (let i = 0; i < 12; i++) {\n        dataPopular.push(resPopular.data.results[i]);\n      } // Lấy 12 phim\n      this.setState({\n        isPopularMovies: true,\n        isTopRatedMovies: false,\n        isUpComingMovies: false,\n        onTrailer: false,\n        data: dataPopular,\n      });\n    } else if (e.target.name === \"isTopRatedMovies\") {\n      let dataTopRated = [];\n      let resTopRated = await Data.getTopRatedMovies(page);\n      for (let i = 0; i < 12; i++) {\n        dataTopRated.push(resTopRated.data.results[i]);\n      }\n      this.setState({\n        isPopularMovies: false,\n        isTopRatedMovies: true,\n        isUpComingMovies: false,\n        onTrailer: false,\n        data: dataTopRated,\n      });\n    } else {\n      let dataUpComing = [];\n      let resUpComing = await Data.getUpComingMovies(page);\n      for (let i = 0; i < 12; i++) {\n        dataUpComing.push(resUpComing.data.results[i]);\n      }\n      this.setState({\n        isPopularMovies: false,\n        isTopRatedMovies: false,\n        isUpComingMovies: true,\n        data: dataUpComing,\n        onTrailer: false,\n      });\n    }\n  };\n\n  //Lấy ID để lấy trailer\n  onGetId = async (id) => {\n    let key = \"\";\n    let resVideo = await Data.getVideos(id);\n    this.setState({ trailer: resVideo.data.results }, () => {\n      let arr = this.state.trailer.filter((el) => {\n        return el.name.includes(\"Official\") || el.name.includes(\"Trailer\");\n      });\n      if (arr.length !== 0) {\n        key = arr[0].key;\n        this.setState({ key: key, onTrailer: true });\n      }\n    }); // Lấy key của video\n  };\n\n  //Render Movies\n  renderMovieTag = () => {\n    return this.state.data.map((el) => {\n      return (\n        <MovieTag\n          history={this.props.history}\n          popularMovies={el}\n          key={el.id}\n          onGetId={this.onGetId}\n        />\n      );\n    });\n  };\n\n  //Tắt trailer\n  turnOffTrailer = () => {\n    this.setState({ onTrailer: false });\n  };\n\n  onSearch = (e) => {\n    this.setState(\n      {\n        search: e.target.value,\n        isPopularMovies: false,\n        isTopRatedMovies: false,\n        isUpComingMovies: false,\n        isSearch: true,\n      }, // Nhập ký tự vào thì cho isSearch bằng True\n      async () => {\n        // Lấy Data\n        if (this.state.search.length === 0) {\n          //Nếu không có gì trong thanh search thì render lại phần Popular\n          let dataPopular = [];\n          let resPopular = await Data.getPopularMovies(this.state.page);\n          for (let i = 0; i < 12; i++) {\n            // Lấy 12 phim để responsive giao diện\n            dataPopular.push(resPopular.data.results[i]);\n          }\n          this.setState({ data: dataPopular, isSearch: false });\n        } else {\n          // Nếu có thì Render phần Search\n          let resSearch = await Data.getSearch(this.state.search);\n          this.setState({ data: resSearch.data.results });\n        }\n      }\n    );\n  };\n\n  loadMore = async () => {\n    if (this.state.isPopularMovies) {\n      //Trường hợp lấy Popular Movie\n      let newMovies = [...this.state.data]; //Clone lại data bên trên\n      this.setState({ isLoading: true }); // Cho gif loading\n      let resPopular = await Data.getPopularMovies(this.state.page + 1); // Lấy Data Page 2\n      for (let i = 0; i < 12; i++) {\n        newMovies.push(resPopular.data.results[i]); // tạo lại mảng data mới\n      }\n      this.setState({\n        isLoading: false,\n        data: newMovies,\n        page: this.state.page + 1,\n      }); // tắt loading, set lại data để render và chỉnh số page đang lấy +1\n    } else if (this.state.isTopRatedMovies) {\n      //Trường hợp lấy Popular Movie\n      let newMovies = [...this.state.data]; //Clone lại data bên trên\n      this.setState({ isLoading: true }); // Cho gif loading\n      let resTopRated = await Data.getTopRatedMovies(this.state.page + 1); // Lấy Data Page 2\n      for (let i = 0; i < 12; i++) {\n        newMovies.push(resTopRated.data.results[i]); // tạo lại mảng data mới\n      }\n      this.setState({\n        isLoading: false,\n        data: newMovies,\n        page: this.state.page + 1,\n      }); // tắt loading, set lại data để render và chỉnh số page đang lấy +1\n    } else {\n    }\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <SearchBar onSearch={this.onSearch} />\n        <div className=\"buttons\">\n          <button\n            className=\"popular button\"\n            onClick={(e) => this.onClickButton(e)}\n            name=\"isPopularMovies\"\n          >\n            Popular\n          </button>\n          <button\n            className=\"top-rated button\"\n            onClick={(e) => this.onClickButton(e)}\n            name=\"isTopRatedMovies\"\n          >\n            Top Rated\n          </button>\n          <button\n            className=\"up-coming button\"\n            onClick={(e) => this.onClickButton(e)}\n            name=\"isUpComingMovies\"\n          >\n            Up Coming\n          </button>\n        </div>\n        <div className=\"movie-render-container\" onClick={this.turnOffTrailer}>\n          {this.state.onTrailer ? <TrailerHover id={this.state.key} /> : null}\n          {this.renderMovieTag()}\n        </div>\n        {this.state.isLoading ? (\n          <div className=\"loading\">\n            <img\n              src={process.env.PUBLIC_URL + \"/Images/loading.gif\"}\n              alt=\"non\"\n            />{\" \"}\n          </div>\n        ) : (\n          <div className=\"load-more-container\">\n            <button className=\"load-more\" onClick={this.loadMore}>\n              Load More\n            </button>\n          </div>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nexport default MovieRender;\n"]},"metadata":{},"sourceType":"module"}